eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgdGVzdHM6CiAgICBpbWFnZTogbm9kZTo3LjMKICAgIGNvbW1hbmRzOgogICAgICAtIG5wbSBpbnN0YWxsIC1nIHlhcm4KICAgICAgLSB5YXJuCiAgICAgIC0geWFybiBydW4gbGludAogICAgICAtIHlhcm4gcnVuIHRlc3QKICAgICAgLSBjdXJsIC1zIGh0dHBzOi8vY29kZWNvdi5pby9iYXNoIHwgYmFzaCAtcyAtIC10ICRDT0RFQ09WX1RPS0VOCiAgICAgIC0geWFybiBydW4gYnVpbGQKICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdXNoCiAgICAgIGJyYW5jaDoKICAgICAgICBleGNsdWRlOiBbIG1hc3RlciwgZGV2ZWxvcG1lbnQgXQoKICBkZXZlbG9wbWVudDoKICAgIGltYWdlOiBub2RlOjcuMwogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gTk9ERV9FTlY9ZGV2ZWxvcG1lbnQKICAgIGNvbW1hbmRzOgogICAgICAtIG5wbSBpbnN0YWxsIC1nIHlhcm4KICAgICAgLSB5YXJuCiAgICAgIC0gLi9ub2RlX21vZHVsZXMvLmJpbi93ZWJwYWNrCiAgICAgIC0gcm0gLXJmIC93ZWIvKgogICAgICAtIGNwIC12ciAuL2Rpc3QvLiAvd2ViCiAgICAgIC0gY3AgLXZyIC4vcHVibGljLy4gL3dlYgogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3d3dy9odG1sL29ua2lib3QvZGV2ZWxvcG1lbnQ6L3dlYgogICAgd2hlbjoKICAgICAgYnJhbmNoOiBkZXZlbG9wbWVudAogICAgICBldmVudDogcHVzaAoKICBwcm9kdWN0aW9uOgogICAgaW1hZ2U6IG5vZGU6Ny4zCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBOT0RFX0VOVj1wcm9kdWN0aW9uCiAgICBjb21tYW5kczoKICAgICAgLSBucG0gaW5zdGFsbCAtZyB5YXJuCiAgICAgIC0geWFybgogICAgICAtIC4vbm9kZV9tb2R1bGVzLy5iaW4vd2VicGFjawogICAgICAtIHJtIC1yZiAvd2ViLyoKICAgICAgLSBjcCAtdnIgLi9kaXN0Ly4gL3dlYgogICAgICAtIGNwIC12ciAuL3B1YmxpYy8uIC93ZWIKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci93d3cvaHRtbC9vbmtpYm90L21hc3Rlcjovd2ViCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogdGFnCg.F2smZgN-gsxjCU613T3io4vbW4aV3-IqOxEmHKiULtQ