eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgdGVzdHM6CiAgICBpbWFnZTogbm9kZTo3LjMKICAgIGNvbW1hbmRzOgogICAgICAtIG5wbSBpbnN0YWxsIC1nIHlhcm4KICAgICAgLSB5YXJuCiAgICAgIC0geWFybiBydW4gbGludAogICAgICAtIHlhcm4gcnVuIHRlc3QKICAgICAgLSB5YXJuIHJ1biBidWlsZAogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgICAgYnJhbmNoOgogICAgICAgIGV4Y2x1ZGU6IFsgbWFzdGVyLCBkZXZlbG9wbWVudCBdCgogIGRldmVsb3BtZW50OgogICAgaW1hZ2U6IG5vZGU6Ny4zCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBOT0RFX0VOVj1kZXZlbG9wbWVudAogICAgY29tbWFuZHM6CiAgICAgIC0gbnBtIGluc3RhbGwgLWcgeWFybgogICAgICAtIHlhcm4KICAgICAgLSAuL25vZGVfbW9kdWxlcy8uYmluL3dlYnBhY2sKICAgICAgLSBybSAtcmYgL3dlYi8qCiAgICAgIC0gY3AgLXZyIC4vZGlzdC8uIC93ZWIKICAgICAgLSBjcCAtdnIgLi9wdWJsaWMvLiAvd2ViCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvd3d3L2h0bWwvb25raWJvdC9kZXZlbG9wbWVudDovd2ViCiAgICB3aGVuOgogICAgICBicmFuY2g6IGRldmVsb3BtZW50CiAgICAgIGV2ZW50OiBwdXNoCgogIHByb2R1Y3Rpb246CiAgICBpbWFnZTogbm9kZTo3LjMKICAgIGVudmlyb25tZW50OgogICAgICAtIE5PREVfRU5WPXByb2R1Y3Rpb24KICAgIGNvbW1hbmRzOgogICAgICAtIG5wbSBpbnN0YWxsIC1nIHlhcm4KICAgICAgLSB5YXJuCiAgICAgIC0gLi9ub2RlX21vZHVsZXMvLmJpbi93ZWJwYWNrCiAgICAgIC0gcm0gLXJmIC93ZWIvKgogICAgICAtIGNwIC12ciAuL2Rpc3QvLiAvd2ViCiAgICAgIC0gY3AgLXZyIC4vcHVibGljLy4gL3dlYgogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3d3dy9odG1sL29ua2lib3QvbWFzdGVyOi93ZWIKICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiB0YWcK.mA1FU6pZhof1kLISr4Hw5_0p23SkmKEayNPEklJa9-0